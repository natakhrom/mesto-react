{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteConfirmationPopup.js","components/App.js","serviceWorker.js","index.js","logo.svg","images/avatar.jpg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","onClick","name","type","aria-label","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","Footer","ImagePopup","onClose","api","baseUrl","headers","this","_baseUrl","_headers","path","payload","fetch","then","res","ok","json","Promise","reject","status","_request","method","body","JSON","stringify","cardId","putLike","deleteLike","authorization","PopupWithForm","isOpen","onSubmit","title","children","btnText","action","noValidate","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","e","preventDefault","id","value","placeholder","required","pattern","minLength","maxLength","onChange","target","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","AddPlacePopup","nameRef","linkRef","DeleteConfirmationPopup","onConfirm","cardToDelete","undefined","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","setCardToDelete","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","all","getUserInfo","getInitialCards","userInfoResponse","cardsResponse","catch","error","console","log","Provider","changeLikeCardStatus","newCard","newCards","c","patchEditProfile","postAddNewCard","patchNewAvatar","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"4PAWeA,MARf,WACI,OACI,4BAAQC,UAAU,UACV,yBAAKC,IAAKC,IAAMF,UAAU,OAAOG,IAAI,mBCJxCC,EAAqBC,IAAMC,gBCwCzBC,MAvCf,YAA8D,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,aACpCC,EAAcP,IAAMQ,WAAWT,GAG/BU,EAAQN,EAAKO,MAAMC,MAAQJ,EAAYI,IAEvCC,EAAyB,6BACTH,EAAQ,6BAA+B,6BAIvDI,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAGrDM,EAAuB,4BAAwBJ,EAAU,2BAA6B,qBAc5F,OACI,wBAAIlB,UAAU,QACV,yBAAKA,UAAU,cAAcuB,MAAO,CAAEC,gBAAgB,OAAD,OAAShB,EAAKiB,KAAd,MAAwBC,QAdrF,WACIjB,EAAYD,MAcR,wBAAIR,UAAU,cAAcQ,EAAKmB,MACjC,4BAAQ3B,UAAWsB,EAAyBI,QAZpD,WACIhB,EAAWF,IAW+DoB,KAAK,SAASC,aAAW,0FAC/F,yBAAK7B,UAAU,uBAAuBQ,EAAKW,MAAMW,QACjD,4BAAQ9B,UAAWiB,EAA2BS,QAVtD,WACIf,EAAaH,IASkEoB,KAAK,SAASC,aAAW,sFCJjGE,MA7Bf,YAA0G,IAA1FC,EAAyF,EAAzFA,aAAcC,EAA2E,EAA3EA,cAAeC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,MAAO1B,EAAyC,EAAzCA,YAAaC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,aAC/EC,EAAcP,IAAMQ,WAAWT,GAErC,OACI,0BAAMJ,UAAU,WACZ,6BAASA,UAAU,WACf,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,kBAAkB0B,QAASM,EAAcT,MAAO,CAAEC,gBAAgB,OAAD,OAASZ,EAAYwB,OAArB,QAChF,wBAAIpC,UAAU,iBAAiBY,EAAYe,MAC3C,uBAAG3B,UAAU,iBAAiBY,EAAYyB,OAC1C,4BAAQrC,UAAU,uBAAuB4B,KAAK,SAASF,QAASO,KAEpE,4BAAQjC,UAAU,uBAAuB4B,KAAK,SAASF,QAASQ,KAGpE,wBAAIlC,UAAU,SACTmC,EAAMG,KAAI,SAAC9B,EAAMa,GAAP,OACP,kBAAC,EAAD,CACIkB,IAAK/B,EAAKQ,IACVR,KAAMA,EACNC,YAAaA,EACbC,WAAYA,EACZC,aAAcA,UChBvB6B,MARf,WACI,OACI,4BAAQxC,UAAU,UACd,uBAAGA,UAAU,qBAAb,4BCWGyC,MAdf,YAAwC,IAAlBjC,EAAiB,EAAjBA,KAAMkC,EAAW,EAAXA,QAGxB,OACI,6BAAS1C,UAAS,kCAA6BQ,GAAQ,iBACnD,4BAAQR,UAAU,qBACd,4BAAQ4B,KAAK,SAASC,aAAW,kFAAiB7B,UAAU,uCAAuC0B,QAASgB,IAC5G,yBAAK1C,UAAU,mBAAmBC,IAAKO,GAAQA,EAAKiB,KAAMtB,IAAI,KAC9D,gCAAYH,UAAU,qBAAqBQ,GAAQA,EAAKmB,S,cC0FzDgB,EARH,I,WA3FR,cAAiC,IAApBC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,QAAU,oBAC5BC,KAAKC,SAAWH,EAChBE,KAAKE,SAAWH,E,qDAGXI,EAAMC,GACX,OAAOC,MAAMF,EAAMC,GACdE,MAAK,SAAAC,GACF,OAAIA,EAAIC,GACGD,EAAIE,OAGRC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAK7C,OAAOZ,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,aAA2C,CAC9CF,QAASC,KAAKE,a,wCAKlB,OAAOF,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,UAAwC,CAC3CF,QAASC,KAAKE,a,uCAILrB,EAAMU,GACnB,OAAOS,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,aAA2C,CAC9Ca,OAAQ,QACRf,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAU,CACjBpC,KAAMA,EACNU,MAAOA,Q,qCAKJV,EAAMF,GACjB,OAAOqB,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,UAAwC,CAC3Ca,OAAQ,OACRf,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAW,CAClBpC,KAAMA,EACNF,KAAMA,Q,qCAKHA,GACX,OAAOqB,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,oBAAkD,CACrDa,OAAQ,QACRf,QAASC,KAAKE,SACda,KAAMC,KAAKC,UAAW,CAClB3B,OAAQX,Q,iCAKTuC,GACP,OAAOlB,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,kBAAwCiB,GAAU,CACrDJ,OAAQ,SACRf,QAASC,KAAKE,a,8BAIdgB,GACJ,OAAOlB,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,wBAA8CiB,GAAU,CAC3DJ,OAAQ,MACRf,QAASC,KAAKE,a,iCAIXgB,GACP,OAAOlB,KAAKa,SAAL,UAAiBb,KAAKC,SAAtB,wBAA8CiB,GAAU,CAC3DJ,OAAQ,SACRf,QAASC,KAAKE,a,2CAIDgB,EAAQ9C,GACzB,OAAIA,EACO4B,KAAKmB,QAAQD,GAGblB,KAAKoB,WAAWF,O,KAKvB,CAAQ,CAChBpB,QAAS,8CACTC,QAAS,CACPsB,cAAe,uCACf,eAAgB,sB,gBCjFPC,MAbf,YAAuF,IAA9DzC,EAA6D,EAA7DA,KAAM0C,EAAuD,EAAvDA,OAAQ3B,EAA+C,EAA/CA,QAAS4B,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QACvE,OACI,6BAASzE,UAAS,sBAAiB2B,EAAjB,YAAyB0C,GAAU,iBACjD,0BAAMrE,UAAU,mBAAmB2B,KAAI,UAAKA,GAAQiC,OAAO,OAAOc,OAAO,IAAIC,YAAU,EAACL,SAAUA,GAC9F,wBAAItE,UAAU,kBAAkBuE,GAC/BC,EACD,4BAAQ5C,KAAK,SAAS5B,UAAU,iBAAiByE,GACjD,4BAAQ7C,KAAK,SAASC,aAAW,kFAAiB7B,UAAU,oBAAoB0B,QAASgB,OC0C1FkC,MA/Cf,YAA8D,IAAlCP,EAAiC,EAAjCA,OAAQ3B,EAAyB,EAAzBA,QAASmC,EAAgB,EAAhBA,aAAgB,EACjCxE,IAAMyE,SAAS,IADkB,mBAClDnD,EADkD,KAC5CoD,EAD4C,OAEnB1E,IAAMyE,SAAS,IAFI,mBAElDE,EAFkD,KAErCC,EAFqC,KAGnDrE,EAAcP,IAAMQ,WAAWT,GAgCrC,OALAC,IAAM6E,WAAU,WACZH,EAAQnE,EAAYe,MACpBsD,EAAerE,EAAYyB,SAC1B,CAACzB,IAGF,kBAAC,EAAD,CAAee,KAAK,YAAY4C,MAAM,4HAAwBE,QAAQ,yDAAYJ,OAAQA,EAAQ3B,QAvBtG,WACIqC,EAAQnE,EAAYe,MACpBsD,EAAerE,EAAYyB,OAC3BK,KAoBsH4B,SAjB1H,SAAsBa,GAElBA,EAAEC,iBAGFP,EAAa,CACXlD,OACAU,MAAO2C,MAWL,8BAAUhF,UAAU,gBAChB,2BAAOqF,GAAG,aAAazD,KAAK,OAAOD,KAAK,YAAY2D,MAAO3D,EAAM4D,YAAY,qBAAMvF,UAAU,+BAA+BwF,UAAQ,EAACC,QAAQ,2CAAuBC,UAAU,IAAIC,UAAU,KAAKC,SAjC7M,SAA0BT,GACtBJ,EAAQI,EAAEU,OAAOP,UAiCT,0BAAMD,GAAG,mBAAmBrF,UAAU,sBACtC,2BAAOqF,GAAG,cAAczD,KAAK,OAAOD,KAAK,QAAQ2D,MAAON,EAAaO,YAAY,kCAASvF,UAAU,8BAA8BwF,UAAQ,EAACE,UAAU,IAAIC,UAAU,MAAMC,SA/BrL,SAAiCT,GAC7BF,EAAeE,EAAEU,OAAOP,UA+BhB,0BAAMD,GAAG,oBAAoBrF,UAAU,yBCZxC8F,MA9Bf,YAA+D,IAApCzB,EAAmC,EAAnCA,OAAQ3B,EAA2B,EAA3BA,QAASqD,EAAkB,EAAlBA,eAClCC,EAAY3F,IAAM4F,SAmBxB,OACI,kBAAC,EAAD,CAAetE,KAAK,SAAS4C,MAAM,wFAAkBE,QAAQ,yDAAYJ,OAAQA,EAAQ3B,QAlB7F,WACIsD,EAAUE,QAAQZ,MAAQ,GAC1B5C,KAgB6G4B,SAbjH,SAAsBa,GAElBA,EAAEC,iBAGFW,EAAe,CACX3D,OAAQ4D,EAAUE,QAAQZ,QAG9BU,EAAUE,QAAQZ,MAAQ,KAKtB,8BAAUtF,UAAU,gBAChB,2BAAOqF,GAAG,eAAezD,KAAK,MAAMD,KAAK,OAAOwE,IAAKH,EAAWT,YAAY,qGAAqBvF,UAAU,sCAAsCwF,UAAQ,IACzJ,0BAAMH,GAAG,qBAAqBrF,UAAU,kDCYzCoG,MApCf,YAAuD,IAA/B/B,EAA8B,EAA9BA,OAAQ3B,EAAsB,EAAtBA,QAASR,EAAa,EAAbA,WAC/BmE,EAAUhG,IAAM4F,SAChBK,EAAUjG,IAAM4F,SAsBtB,OACI,kBAAC,EAAD,CAAetE,KAAK,YAAY4C,MAAM,gEAAcE,QAAQ,6CAAUJ,OAAQA,EAAQ3B,QArB1F,WACI2D,EAAQH,QAAQZ,MAAQ,GACxBgB,EAAQJ,QAAQZ,MAAQ,GACxB5C,KAkB0G4B,SAf9G,SAAsBa,GAElBA,EAAEC,iBAGFlD,EAAW,CACPP,KAAM0E,EAAQH,QAAQZ,MACtB7D,KAAM6E,EAAQJ,QAAQZ,QAG1Be,EAAQH,QAAQZ,MAAQ,GACxBgB,EAAQJ,QAAQZ,MAAQ,KAKpB,8BAAUtF,UAAU,gBAChB,2BAAOqF,GAAG,cAAczD,KAAK,OAAOD,KAAK,QAAQwE,IAAKE,EAASd,YAAY,mDAAWvF,UAAU,gCAAgCwF,UAAQ,EAACE,UAAU,IAAIC,UAAU,OACjK,0BAAMN,GAAG,oBAAoBrF,UAAU,sBACvC,2BAAOqF,GAAG,YAAYzD,KAAK,MAAMD,KAAK,OAAOwE,IAAKG,EAASf,YAAY,qGAAqBvF,UAAU,+BAA+BwF,UAAQ,IAC7I,0BAAMH,GAAG,kBAAkBrF,UAAU,yBCjBtCuG,MAbf,YAAwE,IAArCC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,aAAc/D,EAAW,EAAXA,QAQxD,OACI,kBAAC,EAAD,CAAef,KAAK,eAAe4C,MAAM,2DAAcE,QAAQ,eAAKJ,YAAyBqC,IAAjBD,EAA2C/D,QAASA,EAAS4B,SAR7I,SAAsBa,GAElBA,EAAEC,iBAEFoB,EAAUC,OC8IHE,MAxIf,WAAgB,IAAD,EACiDtG,IAAMyE,UAAS,GADhE,mBACJ8B,EADI,KACoBC,EADpB,OAE2CxG,IAAMyE,UAAS,GAF1D,mBAEJgC,EAFI,KAEiBC,EAFjB,OAG+C1G,IAAMyE,UAAS,GAH9D,mBAGJkC,EAHI,KAGmBC,EAHnB,OAI6B5G,IAAMyE,cAAS4B,GAJ5C,mBAIJD,EAJI,KAIUS,EAJV,OAK6B7G,IAAMyE,cAAS4B,GAL5C,mBAKJS,EALI,KAKUC,EALV,OAM2B/G,IAAMyE,SAAS,CAACnD,KAAM,iEAAgBU,MAAO,sHAAwBD,OAAQA,MANxG,mBAMJxB,EANI,KAMSyG,EANT,OAOehH,IAAMyE,SAAS,IAP9B,mBAOJ3C,EAPI,KAOGmF,EAPH,KAqBX,SAASC,IACLV,GAA0B,GAC1BE,GAAuB,GACvBE,GAAyB,GACzBC,OAAgBR,GAChBU,OAAgBV,GAyEpB,OAVArG,IAAM6E,WAAU,WACZ1B,QACKgE,IAAI,CAAC7E,EAAI8E,cAAe9E,EAAI+E,oBAC5BtE,MAAK,YAAwC,IAAD,mBAArCuE,EAAqC,KAAnBC,EAAmB,KACrCP,EAAeM,GACfL,EAASM,MAEhBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QACjC,IAGC,yBAAK9H,UAAU,QACX,kBAACI,EAAmB6H,SAApB,CAA6B3C,MAAO1E,GAChC,kBAAC,EAAD,MACA,kBAAC,EAAD,CACIqB,cA/FhB,WACI4E,GAA0B,IA+Fd3E,WA5FhB,WACI6E,GAAuB,IA4FX/E,aAzFhB,WACIiF,GAAyB,IAyFbxG,YA9EhB,SAAyBD,GACrB4G,EAAgB5G,IA8EJE,WAzDhB,SAAwBF,GAEpB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAC,OAAIA,EAAEL,MAAQJ,EAAYI,OAG3D2B,EAAIuF,qBAAqB1H,EAAKQ,KAAME,GACnCkC,MAAK,SAAA+E,GAEF,IAAMC,EAAWjG,EAAMG,KAAI,SAAA+F,GAAC,OAAIA,EAAErH,MAAQR,EAAKQ,IAAMmH,EAAUE,KAE/Df,EAASc,MAEZP,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OA8ChBnH,aA3ChB,SAAiCH,GAC7B0G,EAAgB1G,IA2CJ2B,MAAOA,IACX,kBAAC,EAAD,CACIkC,OAAQuC,EACRlE,QAAS6E,EACT1C,aAjFhB,YAA0C,IAAflD,EAAc,EAAdA,KAAMU,EAAQ,EAARA,MAC7BM,EAAI2F,iBAAiB3G,EAAMU,GAC1Be,MAAM,SAAAuE,GACHN,EAAeM,GACfJ,OAEHM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SA4EpB,kBAAC,EAAD,CACIzD,OAAQyC,EACRpE,QAAS6E,EACTrF,WAtChB,YAA6C,IAAdP,EAAa,EAAbA,KAAMF,EAAO,EAAPA,KACjCkB,EAAI4F,eAAe5G,EAAMF,GACxB2B,MAAK,SAAC+E,GACHb,EAAS,GAAD,mBAAKnF,GAAL,CAAYgG,KACpBZ,OAEHM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SAiCpB,kBAAC,EAAD,CACIzD,OAAQ2C,EACRtE,QAAS6E,EACTxB,eAhFhB,YAAuC,IAAV3D,EAAS,EAATA,OACzBO,EAAI6F,eAAepG,GAClBgB,MAAK,SAAAC,GACFgE,EAAehE,GACfkE,OAEHM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,SA2EpB,kBAAC,EAAD,CACIrB,aAAcA,EACdD,UAvDhB,SAA0BhG,GACtBmC,EAAI8F,WAAWjI,EAAKQ,KACnBoC,MAAK,WACF,IAAMgF,EAAWjG,EAAMuG,QAAO,SAAAL,GAAC,OAAIA,EAAErH,MAAQR,EAAKQ,OAClDsG,EAASc,GACTb,OAEHM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAiDhBpF,QAAS6E,IACb,kBAAC,EAAD,CACI/G,KAAM2G,EACNzE,QAAS6E,IACb,kBAAC,EAAD,SCpIIoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnG,MAAK,SAAAoG,GACJA,EAAaC,gBAEd5B,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM4B,a,kBEzI5BC,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.3071d6c0.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n                <img src={logo} className=\"logo\" alt=\"Mesto Russia\"/>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n    const currentUser = React.useContext(CurrentUserContext); \n    \n    /** Определяем, являемся ли мы владельцем текущей карточки */\n    const isOwn = card.owner._id === currentUser._id;\n    /** Создаём переменную, которую после зададим в `className` для кнопки удаления */\n    const cardDeleteButtonClassName = (\n    `card__button-trash ${isOwn ? 'card__button-trash_visible' : 'card__button-trash_hidden'}`\n  );\n\n    /** Определяем, есть ли у карточки лайк, поставленный текущим пользователем */\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    /** Создаём переменную, которую после зададим в `className` для кнопки лайка */\n    const cardLikeButtonClassName = `card__button-like ${isLiked ? 'card__button-like_active' : 'card__button-like'}`;\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card);\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${card.link})`}} onClick={handleClick}></div>\n            <h2 className=\"card__text\">{card.name}</h2>\n            <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" aria-label=\"кнопка Нравится\"></button>\n            <div className=\"card__counter-likes\">{card.likes.length}</div>\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}  type=\"button\" aria-label=\"кнопка Удалить\"></button>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, cards, onCardClick, onCardLike, onCardDelete }) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\" onClick={onEditAvatar} style={{ backgroundImage: `url(${currentUser.avatar})`}}></div>\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <p className=\"profile__text\">{currentUser.about}</p>\n                    <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button> \n                </div>\n                <button className=\"profile__add-button \" type=\"button\" onClick={onAddPlace}></button> \n            </section>\n\n            <ul className=\"cards\">\n                {cards.map((card, i) => (\n                    <Card \n                        key={card._id} \n                        card={card} \n                        onCardClick={onCardClick} \n                        onCardLike={onCardLike} \n                        onCardDelete={onCardDelete} />\n                ))}\n            </ul>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction ImagePopup({ card, onClose }) {\n\n\n    return (\n        <section className={`popup popup_image-place ${card && 'popup_opened'}`}>\n            <figure className=\"popup__form-image\"> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon popup__close-image\" onClick={onClose}></button>\n                <img className=\"popup__big-image\" src={card && card.link} alt=\"\"/>\n                <figcaption className=\"popup__text-image\">{card && card.name}</figcaption>\n            </figure>\n        </section>\n    );\n}\n\nexport default ImagePopup;","class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _request(path, payload) {\n        return fetch(path, payload) \n            .then(res => {  \n                if (res.ok) {\n                    return res.json();\n                }\n                // если ошибка, отклоняем промис\n                return Promise.reject(`Ошибка: ${res.status}`);\n            });\n    }\n\n    getUserInfo() {\n        return this._request(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        });\n    }\n\n    getInitialCards() {\n        return this._request(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        });\n    }\n\n    patchEditProfile(name, about) {\n        return this._request(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        });\n    }\n\n    postAddNewCard(name, link) {\n        return this._request(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify ({\n                name: name,\n                link: link\n            })\n        });\n    }\n\n    patchNewAvatar(link) {\n        return this._request(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify ({\n                avatar: link\n            })\n        });\n    }\n\n    deleteCard(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n\n    putLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        });\n    }\n\n    deleteLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.putLike(cardId);\n        }\n        else {\n            return this.deleteLike(cardId);\n        }\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n      authorization: 'bc2f7d16-f7fa-49da-ae6d-059f2268552e',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction PopupWithForm({ name, isOpen, onClose, onSubmit, title, children, btnText }) {\n    return (\n        <section className={`popup popup_${name} ${isOpen && 'popup_opened'}`}> \n            <form className=\"popup__container\" name={`${name}`} method=\"POST\" action=\"#\" noValidate onSubmit={onSubmit}> \n                <h2 className=\"popup__heading\">{title}</h2>\n                {children}\n                <button type=\"submit\" className=\"popup__button\">{btnText}</button> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon\" onClick={onClose}></button>\n            </form>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    };\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n    };\n\n    function closeForm() {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n        onClose();\n    };\n\n    function handleSubmit(e) {\n        /** Запрещаем браузеру переходить по адресу формы */\n        e.preventDefault();\n      \n        /** Передаём значения управляемых компонентов во внешний обработчик */\n        onUpdateUser({\n          name,\n          about: description,\n        });\n      }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n      }, [currentUser]);\n\n    return (\n        <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" btnText=\"Сохранить\" isOpen={isOpen} onClose={closeForm} onSubmit={handleSubmit}> \n            <fieldset className=\"popup__input\">\n                <input id=\"name-input\" type=\"text\" name=\"firstname\" value={name} placeholder=\"Имя\" className=\"popup__info popup__info_name\" required pattern=\"[A-Za-zА-Яа-я -]{1,}\" minLength=\"2\" maxLength=\"40\" onChange={handleNameChange} /> \n                <span id=\"name-input-error\" className=\"popup__info-error\"></span>\n                <input id=\"about-input\" type=\"text\" name=\"about\" value={description} placeholder=\"О себе\" className=\"popup__info popup__info_job\" required minLength=\"2\" maxLength=\"200\" onChange={handleDescriptionChange} />\n                <span id=\"about-input-error\" className=\"popup__info-error\"></span>\n            </fieldset>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\n    const avatarRef = React.useRef();\n\n    function closeForm() {\n        avatarRef.current.value = '';\n        onClose();\n    };\n\n    function handleSubmit(e) {\n        /** Запрещаем браузеру переходить по адресу формы */\n        e.preventDefault();\n      \n        /** Передаём значения управляемых компонентов во внешний обработчик */\n        onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n        \n        avatarRef.current.value = '';\n      }\n\n    return (\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" btnText=\"Сохранить\" isOpen={isOpen} onClose={closeForm} onSubmit={handleSubmit}> \n            <fieldset className=\"popup__input\">\n                <input id=\"avatar-input\" type=\"url\" name=\"link\" ref={avatarRef} placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link-avatar\" required />\n                <span id=\"avatar-input-error\" className=\"popup__info-error popup__info-error-avatar\"></span>\n            </fieldset>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\n    const nameRef = React.useRef();\n    const linkRef = React.useRef();\n\n    function closeForm() {\n        nameRef.current.value = ''\n        linkRef.current.value = ''\n        onClose();\n    };\n\n    function handleSubmit(e) {\n        /** Запрещаем браузеру переходить по адресу формы */ \n        e.preventDefault();\n      \n        /** Передаём значения управляемых компонентов во внешний обработчик */\n        onAddPlace({\n            name: nameRef.current.value,\n            link: linkRef.current.value\n        });\n\n        nameRef.current.value = ''\n        linkRef.current.value = ''\n      }\n\n    return (\n        <PopupWithForm name=\"new-place\" title=\"Новое место\" btnText=\"Создать\" isOpen={isOpen} onClose={closeForm} onSubmit={handleSubmit} > \n            <fieldset className=\"popup__input\">\n                <input id=\"title-input\" type=\"text\" name=\"title\" ref={nameRef} placeholder=\"Название\" className=\"popup__info popup__info_title\" required minLength=\"1\" maxLength=\"30\"/> \n                <span id=\"title-input-error\" className=\"popup__info-error\"></span>\n                <input id=\"url-input\" type=\"url\" name=\"link\" ref={linkRef} placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link\" required/>\n                <span id=\"url-input-error\" className=\"popup__info-error\"></span> \n            </fieldset>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react' \nimport PopupWithForm from './PopupWithForm';\n\nfunction DeleteConfirmationPopup({ onConfirm, cardToDelete, onClose }) {\n    function handleSubmit(e) {\n        /** Запрещаем браузеру переходить по адресу формы */ \n        e.preventDefault();\n\n        onConfirm(cardToDelete);\n    }\n\n    return (\n        <PopupWithForm name=\"image-delete\" title=\"Вы уверены?\" btnText=\"Да\" isOpen={cardToDelete === undefined ? false : true} onClose={onClose} onSubmit={handleSubmit}/> \n    )\n}\n\nexport default DeleteConfirmationPopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport avatar from '../images/avatar.jpg';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteConfirmationPopup from './DeleteConfirmationPopup';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [cardToDelete, setCardToDelete] = React.useState(undefined);\n    const [selectedCard, setSelectedCard] = React.useState(undefined);\n    const [currentUser, setCurrentUser] = React.useState({name: 'Жак-Ив Кусто', about: 'Исследователь океана', avatar: avatar});\n    const [cards, setCards] = React.useState([]);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setCardToDelete(undefined);\n        setSelectedCard(undefined);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.patchEditProfile(name, about)\n        .then (userInfoResponse => {\n            setCurrentUser(userInfoResponse);\n            closeAllPopups();\n        })\n        .catch(error => console.log(error));\n    }\n\n    function handleUpdateAvatar({avatar}) {\n        api.patchNewAvatar(avatar)\n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n        .catch(error => console.log(error));\n    }\n\n    function handleCardLike(card) {\n        /** Снова проверяем, есть ли уже лайк на этой карточке */\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n            \n        /** Отправляем запрос в API и получаем обновлённые данные карточки */\n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then(newCard => {\n            /** Формируем новый массив на основе имеющегося, подставляя в него новую карточку */\n            const newCards = cards.map(c => c._id === card._id ? newCard : c);\n            /** Обновляем стейт */\n            setCards(newCards);\n        })\n        .catch(error => console.log(error));\n    };\n\n    function handleCardDeleteRequest(card) {\n        setCardToDelete(card);\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n            const newCards = cards.filter(c => c._id !== card._id);\n            setCards(newCards);\n            closeAllPopups();\n        })\n        .catch(error => console.log(error));\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.postAddNewCard(name, link)\n        .then((newCard) => {\n            setCards([...cards, newCard]);\n            closeAllPopups();\n        })\n        .catch(error => console.log(error));\n    }\n\n    React.useEffect(() => {\n        Promise\n            .all([api.getUserInfo(), api.getInitialCards()])\n            .then(([userInfoResponse, cardsResponse]) => {\n                    setCurrentUser(userInfoResponse);\n                    setCards(cardsResponse);\n            })\n            .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Main \n                    onEditProfile={handleEditProfileClick} \n                    onAddPlace={handleAddPlaceClick} \n                    onEditAvatar={handleEditAvatarClick} \n                    onCardClick={handleCardClick} \n                    onCardLike={handleCardLike} \n                    onCardDelete={handleCardDeleteRequest} \n                    cards={cards} />\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups} \n                    onAddPlace={handleAddPlaceSubmit} />\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar} />\n                <DeleteConfirmationPopup \n                    cardToDelete={cardToDelete} \n                    onConfirm={handleCardDelete} \n                    onClose={closeAllPopups} />\n                <ImagePopup \n                    card={selectedCard} \n                    onClose={closeAllPopups} />\n                <Footer />\n            </CurrentUserContext.Provider> \n        </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.dc3245f1.jpg\";"],"sourceRoot":""}