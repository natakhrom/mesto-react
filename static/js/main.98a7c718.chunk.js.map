{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/DeleteConfirmationPopup.js","components/App.js","serviceWorker.js","index.js","logo.svg","images/avatar.jpg"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","style","backgroundImage","link","onClick","name","type","aria-label","length","Main","props","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","key","Footer","ImagePopup","undefined","onClose","api","baseUrl","headers","this","_baseUrl","_headers","path","payload","fetch","then","res","ok","json","Promise","reject","status","_request","method","body","JSON","stringify","cardId","putLike","deleteLike","authorization","PopupWithForm","isOpen","action","noValidate","onSubmit","title","children","btnText","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","value","placeholder","required","pattern","minLength","maxLength","onChange","target","EditAvatarPopup","avatarRef","useRef","current","onUpdateAvatar","ref","AddPlacePopup","nameRef","linkRef","DeleteConfirmationPopup","cardToDelete","onConfirm","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","setCardToDelete","selectedCard","setSelectedCard","setCurrentUser","setCards","closeAllPopups","getUserInfo","userInfoResponse","catch","error","console","log","getInitialCards","cardsResponse","Provider","changeLikeCardStatus","newCard","newCards","c","patchEditProfile","postAddNewCard","patchNewAvatar","deleteCard","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.98a7c718.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n                <img src={logo} className=\"logo\" alt=\"Mesto Russia\"/>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Card({card, onCardClick, onCardLike, onCardDelete}) {\n    const currentUser = React.useContext(CurrentUserContext); \n    \n    // Определяем, являемся ли мы владельцем текущей карточки\n    const isOwn = card.owner._id === currentUser._id;\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\n    const cardDeleteButtonClassName = (\n    `card__button-trash ${isOwn ? 'card__button-trash_visible' : 'card__button-trash_hidden'}`\n  );\n\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\n    const cardLikeButtonClassName = `card__button-like ${isLiked ? 'card__button-like_active' : 'card__button-like'}`;\n\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    function handleLikeClick() {\n        onCardLike(card);\n    }\n\n    function handleDeleteClick() {\n        onCardDelete(card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${card.link})`}} onClick={handleClick}></div>\n            <h2 className=\"card__text\">{card.name}</h2>\n            <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\" aria-label=\"кнопка Нравится\"></button>\n            <div className=\"card__counter-likes\">{card.likes.length}</div>\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}  type=\"button\" aria-label=\"кнопка Удалить\"></button>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\" onClick={props.onEditAvatar} style={{ backgroundImage: `url(${currentUser.avatar})`}}></div>\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <p className=\"profile__text\">{currentUser.about}</p>\n                    <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button> \n                </div>\n                <button className=\"profile__add-button \" type=\"button\" onClick={props.onAddPlace}></button> \n            </section>\n\n            <ul className=\"cards\">\n                {props.cards.map((card, i) => (\n                    <Card \n                        key={card._id} \n                        card={card} \n                        onCardClick={props.onCardClick} \n                        onCardLike={props.onCardLike} \n                        onCardDelete={props.onCardDelete} />\n                ))}\n            </ul>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup popup_image-place ${props.card !== undefined ? 'popup_opened' : ''}`}>\n            <figure className=\"popup__form-image\"> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon popup__close-image\" onClick={props.onClose}></button>\n                <img className=\"popup__big-image\" src={props.card !== undefined ? props.card.link : ''} alt=\"\"/>\n                <figcaption className=\"popup__text-image\">{props.card !== undefined ? props.card.name : ''}</figcaption>\n            </figure>\n        </section>\n    );\n}\n\nexport default ImagePopup;","class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _request(path, payload) {\n        return fetch(path, payload) \n            .then(res => {  \n                if (res.ok) {\n                    return res.json();\n                }\n                // если ошибка, отклоняем промис\n                return Promise.reject(`Ошибка: ${res.status}`);\n            });\n    }\n\n    getUserInfo() {\n        return this._request(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        });\n    }\n\n    getInitialCards() {\n        return this._request(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        });\n    }\n\n    patchEditProfile(name, about) {\n        return this._request(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        });\n    }\n\n    postAddNewCard(name, link) {\n        return this._request(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify ({\n                name: name,\n                link: link\n            })\n        });\n    }\n\n    patchNewAvatar(link) {\n        return this._request(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify ({\n                avatar: link\n            })\n        });\n    }\n\n    deleteCard(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n\n    putLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        });\n    }\n\n    deleteLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.putLike(cardId);\n        }\n        else {\n            return this.deleteLike(cardId);\n        }\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n      authorization: 'bc2f7d16-f7fa-49da-ae6d-059f2268552e',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}> \n            <form className=\"popup__container\" name={`${props.name}`} method=\"POST\" action=\"#\" noValidate onSubmit={props.onSubmit}> \n                <h2 className=\"popup__heading\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"popup__button\">{props.btnText}</button> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon\" onClick={props.onClose}></button>\n            </form>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\nimport PopupWithForm from './PopupWithForm'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction EditProfilePopup(props) {\n    const [name, setName] = React.useState(\"Жак-Ив Кусто\");\n    const [description, setDescription] = React.useState(\"Исследователь океана\");\n    const currentUser = React.useContext(CurrentUserContext);\n\n    function handleNameChange(e) {\n        setName(e.target.value);\n    };\n\n    function handleDescriptionChange(e) {\n        setDescription(e.target.value);\n    };\n\n    function closeForm() {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n        props.onClose();\n    };\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n      \n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n          name,\n          about: description,\n        });\n      }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n      }, [currentUser]);\n\n    return (\n        <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" btnText=\"Сохранить\" isOpen={props.isOpen} onClose={closeForm} onSubmit={handleSubmit}> \n            <fieldset className=\"popup__input\">\n                <input id=\"name-input\" type=\"text\" name=\"firstname\" value={name} placeholder=\"Имя\" className=\"popup__info popup__info_name\" required pattern=\"[A-Za-zА-Яа-я -]{1,}\" minLength=\"2\" maxLength=\"40\" onChange={handleNameChange} /> \n                <span id=\"name-input-error\" className=\"popup__info-error\"></span>\n                <input id=\"about-input\" type=\"text\" name=\"about\" value={description} placeholder=\"О себе\" className=\"popup__info popup__info_job\" required minLength=\"2\" maxLength=\"200\" onChange={handleDescriptionChange} />\n                <span id=\"about-input-error\" className=\"popup__info-error\"></span>\n            </fieldset>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef();\n\n    function closeForm() {\n        avatarRef.current.value = '';\n        props.onClose();\n    };\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n      \n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n        \n        avatarRef.current.value = '';\n      }\n\n    return (\n        <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" btnText=\"Сохранить\" isOpen={props.isOpen} onClose={closeForm} onSubmit={handleSubmit}> \n            <fieldset className=\"popup__input\">\n                <input id=\"avatar-input\" type=\"url\" name=\"link\" ref={avatarRef} placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link-avatar\" required />\n                <span id=\"avatar-input-error\" className=\"popup__info-error popup__info-error-avatar\"></span>\n            </fieldset>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from 'react';\nimport PopupWithForm from './PopupWithForm'\n\nfunction AddPlacePopup(props) {\n    const nameRef = React.useRef();\n    const linkRef = React.useRef();\n\n    function closeForm() {\n        nameRef.current.value = ''\n        linkRef.current.value = ''\n        props.onClose();\n    };\n\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n      \n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onAddPlace({\n            name: nameRef.current.value,\n            link: linkRef.current.value\n        });\n\n        nameRef.current.value = ''\n        linkRef.current.value = ''\n      }\n\n    return (\n        <PopupWithForm name=\"new-place\" title=\"Новое место\" btnText=\"Создать\" isOpen={props.isOpen} onClose={closeForm} onSubmit={handleSubmit} > \n            <fieldset className=\"popup__input\">\n                <input id=\"title-input\" type=\"text\" name=\"title\" ref={nameRef} placeholder=\"Название\" className=\"popup__info popup__info_title\" required minLength=\"1\" maxLength=\"30\"/> \n                <span id=\"title-input-error\" className=\"popup__info-error\"></span>\n                <input id=\"url-input\" type=\"url\" name=\"link\" ref={linkRef} placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link\" required/>\n                <span id=\"url-input-error\" className=\"popup__info-error\"></span> \n            </fieldset>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react' \nimport PopupWithForm from './PopupWithForm';\n\nfunction DeleteConfirmationPopup(props) {\n    function handleSubmit(e) {\n        // Запрещаем браузеру переходить по адресу формы\n        e.preventDefault();\n\n        props.onConfirm(props.cardToDelete);\n    }\n\n    return (\n        <PopupWithForm name=\"image-delete\" title=\"Вы уверены?\" btnText=\"Да\" isOpen={props.cardToDelete === undefined ? false : true} onClose={props.onClose} onSubmit={handleSubmit}/> \n    )\n}\n\nexport default DeleteConfirmationPopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport avatar from '../images/avatar.jpg';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport DeleteConfirmationPopup from './DeleteConfirmationPopup';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [cardToDelete, setCardToDelete] = React.useState(undefined);\n    const [selectedCard, setSelectedCard] = React.useState(undefined);\n    const [currentUser, setCurrentUser] = React.useState({name: 'Жак-Ив Кусто', about: 'Исследователь океана', avatar: avatar});\n    const [cards, setCards] = React.useState([]);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setCardToDelete(undefined);\n        setSelectedCard(undefined);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    function handleUpdateUser({name, about}) {\n        api.patchEditProfile(name, about)\n        .then (userInfoResponse => {\n            setCurrentUser(userInfoResponse);\n            closeAllPopups();\n        })\n    }\n\n    function handleUpdateAvatar({avatar}) {\n        api.patchNewAvatar(avatar)\n        .then(res => {\n            setCurrentUser(res);\n            closeAllPopups();\n        })\n    }\n\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n            \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then(newCard => {\n            // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n            const newCards = cards.map(c => c._id === card._id ? newCard : c);\n            // Обновляем стейт\n            setCards(newCards);\n        });\n    };\n\n    function handleCardDeleteRequest(card) {\n        setCardToDelete(card);\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n            const newCards = cards.filter(c => c._id !== card._id);\n            setCards(newCards);\n            closeAllPopups();\n        });\n    }\n\n    function handleAddPlaceSubmit({name, link}) {\n        api.postAddNewCard(name, link)\n        .then((newCard) => {\n            setCards([...cards, newCard]);\n            closeAllPopups();\n        })\n    }\n\n    React.useEffect(() => {\n        api.getUserInfo()\n        .then((userInfoResponse) => {\n            setCurrentUser(userInfoResponse);\n        })\n        .catch(error => console.log(error));\n    }, [])\n\n    React.useEffect(()=> {\n        api.getInitialCards()\n        .then((cardsResponse) => {\n            setCards(cardsResponse);\n        })\n        .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header />\n                <Main \n                    onEditProfile={handleEditProfileClick} \n                    onAddPlace={handleAddPlaceClick} \n                    onEditAvatar={handleEditAvatarClick} \n                    onCardClick={handleCardClick} \n                    onCardLike={handleCardLike} \n                    onCardDelete={handleCardDeleteRequest} \n                    cards={cards} />\n                <EditProfilePopup \n                    isOpen={isEditProfilePopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateUser={handleUpdateUser} />\n                <AddPlacePopup \n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups} \n                    onAddPlace={handleAddPlaceSubmit} />\n                <EditAvatarPopup \n                    isOpen={isEditAvatarPopupOpen} \n                    onClose={closeAllPopups} \n                    onUpdateAvatar={handleUpdateAvatar} />\n                <DeleteConfirmationPopup \n                    cardToDelete={cardToDelete} \n                    onConfirm={handleCardDelete} \n                    onClose={closeAllPopups} />\n                <ImagePopup \n                    card={selectedCard} \n                    onClose={closeAllPopups} />\n                <Footer />\n            </CurrentUserContext.Provider> \n        </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.dc3245f1.jpg\";"],"sourceRoot":""}