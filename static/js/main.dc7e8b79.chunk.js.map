{"version":3,"sources":["logo.svg","images/avatar.jpg","components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","api","baseUrl","headers","this","_baseUrl","_headers","path","payload","fetch","then","res","ok","json","Promise","reject","status","_request","name","about","method","body","JSON","stringify","link","avatar","cardId","authorization","Card","card","onCardClick","style","backgroundImage","onClick","type","aria-label","likes","length","Main","onEditProfile","onAddPlace","onEditAvatar","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getUserInfo","getInitialCards","userInfoResponse","cardsResponse","catch","error","console","log","map","i","key","_id","Footer","PopupWithForm","props","isOpen","action","noValidate","title","children","btnText","onClose","ImagePopup","undefined","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","id","defaultValue","placeholder","required","pattern","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.dc7e8b79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c6f11019.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.dc3245f1.jpg\";","import React from 'react';\nimport logo from '../logo.svg';\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n                <img src={logo} className=\"logo\" alt=\"Mesto Russia\"/>\n        </header>\n    );\n}\n\nexport default Header;","class Api {\n    constructor({baseUrl, headers}) {\n        this._baseUrl = baseUrl;\n        this._headers = headers;\n    }\n\n    _request(path, payload) {\n        return fetch(path, payload) \n            .then(res => {  \n                if (res.ok) {\n                    return res.json();\n                }\n                // если ошибка, отклоняем промис\n                return Promise.reject(`Ошибка: ${res.status}`);\n            });\n    }\n\n    getUserInfo() {\n        return this._request(`${this._baseUrl}/users/me`, {\n            headers: this._headers\n        });\n    }\n\n    getInitialCards() {\n        return this._request(`${this._baseUrl}/cards`, {\n            headers: this._headers\n        });\n    }\n\n    patchEditProfile(name, about) {\n        return this._request(`${this._baseUrl}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about\n            })\n        });\n    }\n\n    postAddNewCard(name, link) {\n        return this._request(`${this._baseUrl}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify ({\n                name: name,\n                link: link\n            })\n        });\n    }\n\n    patchNewAvatar(link) {\n        return this._request(`${this._baseUrl}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify ({\n                avatar: link\n            })\n        });\n    }\n\n    deleteCard(cardId) {\n        return this._request(`${this._baseUrl}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n\n    putLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers\n        });\n    }\n\n    deleteLike(cardId) {\n        return this._request(`${this._baseUrl}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        });\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n    headers: {\n      authorization: 'bc2f7d16-f7fa-49da-ae6d-059f2268552e',\n      'Content-Type': 'application/json'\n    }\n});\n\nexport default api;","import React from 'react';\n\nfunction Card({card, onCardClick}) {\n    function handleClick() {\n        onCardClick(card);\n    }\n\n    return (\n        <li className=\"card\">\n            <div className=\"card__image\" style={{ backgroundImage: `url(${card.link})`}} onClick={handleClick}></div>\n            <h2 className=\"card__text\">{card.name}</h2>\n            <button className=\"card__button-like\" type=\"button\" aria-label=\"кнопка Нравится\"></button>\n            <div className=\"card__counter-likes\">{card.likes.length}</div>\n            <button className=\"card__button-trash\"  type=\"button\" aria-label=\"кнопка Удалить\"></button>\n        </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/api';\nimport avatar from '../images/avatar.jpg';\nimport Card from './Card';\n\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick}) {\n    const [userName, setUserName] = React.useState('Жак-Ив Кусто');\n    const [userDescription, setUserDescription] = React.useState('Исследователь океана');\n    const [userAvatar, setUserAvatar] = React.useState(avatar);\n    const [cards, setCards] = React.useState([]);\n\n    React.useEffect(()=> {\n        Promise.all([api.getUserInfo(), api.getInitialCards()])\n        .then(([userInfoResponse, cardsResponse]) => {\n            setUserName(userInfoResponse.name);\n            setUserDescription(userInfoResponse.about);\n            setUserAvatar(userInfoResponse.avatar);\n            setCards(cardsResponse);\n        })\n        .catch(error => console.log(error));\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__info\">\n                    <div className=\"profile__avatar\" onClick={onEditAvatar} style={{ backgroundImage: `url(${userAvatar})`}}></div>\n                    <h1 className=\"profile__name\">{userName}</h1>\n                    <p className=\"profile__text\">{userDescription}</p>\n                    <button className=\"profile__edit-button\" type=\"button\" onClick={onEditProfile}></button> \n                </div>\n                <button className=\"profile__add-button \" type=\"button\" onClick={onAddPlace}></button> \n            </section>\n\n            <ul className=\"cards\">\n                {cards.map((card, i) => (\n                    <Card key={card._id} card={card} onCardClick={onCardClick}/>\n                ))}\n            </ul>\n        </main>\n    );\n}\n\nexport default Main;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nfunction PopupWithForm(props) {\n    return (\n        <section className={`popup popup_${props.name} ${props.isOpen ? 'popup_opened' : ''}`}> \n            <form className=\"popup__container\" name={`${props.name}`} method=\"POST\" action=\"#\" noValidate> \n                <h2 className=\"popup__heading\">{props.title}</h2>\n                {props.children}\n                <button type=\"submit\" className=\"popup__button\">{props.btnText}</button> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon\" onClick={props.onClose}></button>\n            </form>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n    return (\n        <section className={`popup popup_image-place ${props.card !== undefined ? 'popup_opened' : ''}`}>\n            <figure className=\"popup__form-image\"> \n                <button type=\"button\" aria-label=\"кнопка Закрыть\" className=\"popup__close-icon popup__close-image\" onClick={props.onClose}></button>\n                <img className=\"popup__big-image\" src={props.card !== undefined ? props.card.link : ''} alt=\"\"/>\n                <figcaption className=\"popup__text-image\">{props.card !== undefined ? props.card.name : ''}</figcaption>\n            </figure>\n        </section>\n    );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\n\n\nfunction App() {\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(undefined);\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsEditAvatarPopupOpen(false);\n        setSelectedCard(undefined);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card);\n    }\n\n    return (\n        <div className=\"page\">\n            <Header />\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n            <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" btnText=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}> \n                <fieldset className=\"popup__input\">\n                    <input id=\"name-input\" type=\"text\" name=\"firstname\" defaultValue=\"Жак-Ив Кусто\" placeholder=\"Имя\" className=\"popup__info popup__info_name\" required pattern=\"[A-Za-zА-Яа-я -]{1,}\" minLength=\"2\" maxLength=\"40\"/> \n                    <span id=\"name-input-error\" className=\"popup__info-error\"></span>\n                    <input id=\"about-input\" type=\"text\" name=\"about\" defaultValue=\"Исследователь океана\" placeholder=\"О себе\" className=\"popup__info popup__info_job\" required minLength=\"2\" maxLength=\"200\"/>\n                    <span id=\"about-input-error\" className=\"popup__info-error\"></span>\n                </fieldset>\n            </PopupWithForm>\n            <PopupWithForm name=\"new-place\" title=\"Новое место\" btnText=\"Создать\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}> \n                <fieldset className=\"popup__input\">\n                    <input id=\"title-input\" type=\"text\" name=\"title\" defaultValue=\"\" placeholder=\"Название\" className=\"popup__info popup__info_title\" required minLength=\"1\" maxLength=\"30\"/> \n                    <span id=\"title-input-error\" className=\"popup__info-error\"></span>\n                    <input id=\"url-input\" type=\"url\" name=\"link\" defaultValue=\"\" placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link\" required/>\n                    <span id=\"url-input-error\" className=\"popup__info-error\"></span> \n                </fieldset>\n            </PopupWithForm>\n            <PopupWithForm name=\"avatar\" title=\"Обновить аватар\" btnText=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}> \n                <fieldset className=\"popup__input\">\n                    <input id=\"avatar-input\" type=\"url\" name=\"link\" defaultValue=\"\" placeholder=\"Ссылка на картинку\" className=\"popup__info popup__info_link-avatar\" required/>\n                    <span id=\"avatar-input-error\" className=\"popup__info-error popup__info-error-avatar\"></span>\n                </fieldset>\n            </PopupWithForm>\n            <PopupWithForm name=\"image-delete\" title=\"Вы уверены?\"> \n                <button type=\"submit\" className=\"popup__button popup__button-delete\">Да</button>\n            </PopupWithForm>\n            <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n            <Footer /> \n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}